{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tbody","rows","form","createElement","isAlreadySorted","previousElement","getSalaryAmount","salary","Number","split","join","getSortedData","column","index","cellIndex","contentOfTheFirstCell","cells","textContent","sortedRows","sort","cellA","cellB","cellFirst","cellSecond","includes","valueFirst","valueSecond","append","activeElementHandler","eventOnCell","parentElement","classList","remove","currentElement","target","add","addEventListener","clickEvent","tHead","contains","action","method","insertAdjacentHTML","body","pushNotification","posTop","posRight","title","description","type","notification","notificationTitle","notificationDescription","className","dataset","qa","style","top","right","setTimeout","submitButton","getNewEmployee","clickButton","preventDefault","nameInput","value","positionInput","ageInput","officeSelected","salaryInput","length","getFormattedSalary","salaryParams","String","splice"],"mappings":"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","file":"main.cf69c185.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tbody = table.querySelector('tbody');\nconst rows = [...tbody.rows];\n\nconst form = document.createElement('form');\n\nlet isAlreadySorted = false;\nlet previousElement = null;\n\nfunction getSalaryAmount(salary) {\n  return Number(salary\n    .split('$')\n    .join('')\n    .split(',')\n    .join('')\n  );\n}\n\nfunction getSortedData(column) {\n  const index = column.cellIndex;\n  const contentOfTheFirstCell = rows[0].cells[index].textContent;\n\n  const sortedRows = rows.sort((cellA, cellB) => {\n    const cellFirst = cellA.cells[index].textContent;\n    const cellSecond = cellB.cells[index].textContent;\n\n    if (contentOfTheFirstCell.includes('$')) {\n      const valueFirst = getSalaryAmount(cellFirst);\n      const valueSecond = getSalaryAmount(cellSecond);\n\n      if (!isAlreadySorted) {\n        return valueFirst > valueSecond ? 1 : -1;\n      } else {\n        return valueFirst < valueSecond ? 1 : -1;\n      }\n    }\n\n    if (Number(contentOfTheFirstCell)) {\n      const valueFirst = Number(cellFirst);\n      const valueSecond = Number(cellSecond);\n\n      if (!isAlreadySorted) {\n        return valueFirst > valueSecond ? 1 : -1;\n      } else {\n        return valueFirst < valueSecond ? 1 : -1;\n      }\n    }\n\n    if (!isAlreadySorted) {\n      return cellFirst > cellSecond ? 1 : -1;\n    } else {\n      return cellFirst < cellSecond ? 1 : -1;\n    }\n  });\n\n  tbody.append(...sortedRows);\n}\n\nfunction activeElementHandler(eventOnCell) {\n  if (previousElement !== null) {\n    previousElement.parentElement.classList.remove('active');\n  }\n\n  const currentElement = eventOnCell.target;\n\n  previousElement = currentElement;\n\n  currentElement.parentElement.classList.add('active');\n}\n\ntable.addEventListener('click', (clickEvent) => {\n  if (table.tHead.contains(clickEvent.target)) {\n    getSortedData(clickEvent.target);\n\n    isAlreadySorted = !isAlreadySorted;\n  }\n});\n\ntable.addEventListener('click', activeElementHandler);\n\nform.classList.add('new-employee-form');\nform.action = '#';\nform.method = 'GET';\n\nform.insertAdjacentHTML('beforeend', `\n  <label for=\"name\">\n    Name:\n    <input\n      id=\"name\"\n      name=\"name\"\n      type=\"text\"\n      data-qa=\"name\"\n      value=\"\"\n      required\n    >\n  </label>\n  <label for=\"position\">\n    Position:\n    <input\n      id=\"position\"\n      name=\"position\"\n      type=\"text\"\n      data-qa=\"position\"\n      required\n    >\n  </label>\n  <label for=\"office\">\n    Office:\n    <select\n      id=\"office\"\n      name=\"office\"\n      data-qa=\"office\"\n      required\n    >\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n  <label for=\"age\">\n    Age:\n    <input\n      id=\"age\"\n      name=\"age\"\n      type=\"text\"\n      data-qa=\"age\"\n      required\n    >\n  </label>\n  <label for=\"salary\">\n    Salary:\n      <input\n        id=\"salary\"\n        name=\"salary\"\n        type=\"text\"\n        data-qa=\"salary\"\n        required\n      >\n  </label>\n  <button>\n    Save to table\n  </button>\n`);\n\ndocument.body.append(form);\n\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  const notification = document.createElement('div');\n  const notificationTitle = document.createElement('h2');\n  const notificationDescription = document.createElement('p');\n\n  notification.classList.add('notification', type);\n  notificationTitle.className = 'title';\n  notificationTitle.textContent = title;\n  notificationDescription.textContent = description;\n  notification.dataset.qa = 'notification';\n\n  notification.style.top = posTop + 'px';\n  notification.style.right = posRight + 'px';\n\n  notification.append(notificationTitle, notificationDescription);\n\n  document.body.append(notification);\n\n  setTimeout(function() {\n    notification.remove();\n  }, 5000);\n};\n\nconst submitButton = form.querySelector('button');\n\nfunction getNewEmployee(clickButton) {\n  clickButton.preventDefault();\n\n  const nameInput = form.querySelector('#name').value;\n  const positionInput = form.querySelector('#position').value;\n  const ageInput = Number(form.querySelector('#age').value);\n  const officeSelected = form.querySelector('#office').value;\n  const salaryInput = Number(form.querySelector('#salary').value);\n\n  if (nameInput.length < 4) {\n    pushNotification(\n      10, 10, 'Invalid input', 'Name should be longer than 4 letters', 'error'\n    );\n\n    return;\n  }\n\n  if (!positionInput) {\n    pushNotification(\n      150, 10, 'Invalid input', 'Position required', 'error'\n    );\n\n    return;\n  }\n\n  if (!ageInput) {\n    pushNotification(\n      150, 10, 'Invalid input', 'Age should be a number', 'error'\n    );\n\n    return;\n  }\n\n  if (ageInput < 18 || ageInput > 90) {\n    pushNotification(\n      150, 10, 'Invalid input', 'Age should be between 18 and 90', 'error'\n    );\n\n    return;\n  }\n\n  if (!salaryInput) {\n    pushNotification(\n      300, 10, 'Invalid input', 'Salary should be a number', 'error'\n    );\n\n    return;\n  }\n\n  pushNotification(\n    10, 10, 'New employee added', 'New employee added to the table', 'success'\n  );\n\n  tbody.insertAdjacentHTML('beforeend', `\n    <td>${nameInput}</td>\n    <td>${positionInput}</td>\n    <td>${officeSelected}</td>\n    <td>${ageInput}</td>\n    <td>${getFormattedSalary(salaryInput)}</td>\n  `);\n}\n\nsubmitButton.addEventListener('click', getNewEmployee);\n\nfunction getFormattedSalary(salary) {\n  const salaryParams = String(salary).split('');\n\n  if (String(salary).length > 3 && String(salary).length <= 6) {\n    salaryParams.splice(String(salary).length - 3, 0, ',');\n  }\n\n  if (String(salary).length > 6 && String(salary).length <= 9) {\n    salaryParams.splice(String(salary).length - 3, 0, ',');\n    salaryParams.splice(String(salary).length - 6, 0, ',');\n  }\n\n  if (String(salary).length > 9) {\n    salaryParams.splice(String(salary).length - 3, 0, ',');\n    salaryParams.splice(String(salary).length - 6, 0, ',');\n    salaryParams.splice(String(salary).length - 9, 0, ',');\n  }\n\n  return '$' + salaryParams.join('');\n}\n"]}